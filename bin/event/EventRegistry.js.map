{"version":3,"sources":["event/EventRegistry.ts"],"names":[],"mappings":";;AAEA,uDAAoD;AAEpD;;;GAGG;AACH;IAMC,YAAmB,MAAc;QAEhC,IAAI,CAAC,WAAW,GAAG,IAAI,iCAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC9B,CAAC;IAED;;OAEG;IACI,qBAAqB;QAE3B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IACxC,CAAC;IAED;;OAEG;IACI,QAAQ,CAAC,KAAY;QAE3B,MAAM,SAAS,GAAW,KAAK,CAAC,IAAI,CAAC;QAErC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW;YAChD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAW,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;CACD;AAlCD,sCAkCC","file":"EventRegistry.js","sourcesContent":["import { Event } from './Event';\nimport { Client } from '../client/Client';\nimport { EventDispatcher } from './EventDispatcher';\n\n/**\n * Class for registering Event handlers\n * @private\n */\nexport class EventRegistry\n{\n\tprivate readonly _dispatcher: EventDispatcher;\n\n\tpublic events!: { [event: string]: Function[] };\n\n\tpublic constructor(client: Client)\n\t{\n\t\tthis._dispatcher = new EventDispatcher(client, this);\n\t\tthis.clearRegisteredEvents();\n\t}\n\n\t/**\n\t * Clear all registered events registered with the registry and dispatcher\n\t */\n\tpublic clearRegisteredEvents(): void\n\t{\n\t\tthis.events = {};\n\t\tthis._dispatcher.clearListenedEvents();\n\t}\n\n\t/**\n\t * Register the given Event instance with the registry and dispatcher\n\t */\n\tpublic register(event: Event): void\n\t{\n\t\tconst eventName: string = event.name;\n\n\t\tif (typeof this.events[eventName] === 'undefined')\n\t\t\tthis.events[eventName] = [];\n\n\t\tthis.events[eventName].push((...args: any[]) => event.action(...args));\n\t\tthis._dispatcher.listen(eventName);\n\t}\n}\n"],"sourceRoot":"../../src"}