{"version":3,"sources":["util/Util.ts"],"names":[],"mappings":"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","file":"Util.js","sourcesContent":["import { BaseCommandName } from '../types/BaseCommandName';\nimport { GuildStorage } from '../storage/GuildStorage';\nimport { Message } from '../types/Message';\nimport { Command } from '../command/Command';\nimport { Client } from '../client/Client';\nimport { Time } from './Time';\n\n/**\n * Utility class containing handy static methods that can\n * be used anywhere\n * @module Util\n */\nexport class Util\n{\n\t/**\n\t * Tangible representation of all base command names\n\t * @static\n\t * @name baseCommandNames\n\t * @type {BaseCommandName[]}\n\t */\n\tpublic static baseCommandNames: BaseCommandName[] = require('./static/baseCommandNames.json');\n\n\t/**\n\t * Return whether or not a command was called in the given\n\t * message, the called command, the prefix used to call the\n\t * command, and the name or alias of the command used to call it.\n\t * >Returns everything it manages to determine up to the point of failure\n\t * @static\n\t * @method wasCommandCalled\n\t * @param {Message} message Message to check\n\t * @returns {Promise<Tuple<boolean, Command | null, string, string | null>>}\n\t */\n\tpublic static async wasCommandCalled(message: Message): Promise<[boolean, Command | null, string, string | null]>\n\t{\n\t\tconst client: Client = message.client as Client;\n\t\tconst dm: boolean = message.channel.type !== 'text';\n\t\tconst prefixes: string[] = [\n\t\t\t`<@${client.user!.id}>`,\n\t\t\t`<@!${client.user!.id}>`\n\t\t];\n\n\t\tconst guildStorage: GuildStorage | undefined | null = !dm\n\t\t\t? message.guild.storage || client.storage.guilds.get(message.guild.id)\n\t\t\t: null;\n\n\t\tif (!dm) prefixes.push(await guildStorage!.settings.get('prefix'));\n\t\telse prefixes.push(await client.storage.get('defaultGuildSettings.prefix'));\n\n\t\tlet prefix: string | undefined = prefixes.find(a => message.content.trim().startsWith(a));\n\t\tif (dm && typeof prefix === 'undefined') prefix = '';\n\t\tif (!dm && typeof prefix === 'undefined') return [false, null, prefix!, null];\n\n\t\tconst commandName: string = message.content.trim().slice(prefix!.length).trim().split(' ')[0];\n\t\tconst command: Command | undefined = client.commands.resolve(commandName);\n\t\tif (!command) return [false, null, prefix!, commandName];\n\t\tif (command.disabled) return [false, command, prefix!, commandName];\n\n\t\treturn [true, command, prefix!, commandName];\n\t}\n\n\t/**\n\t * Split args from the input by the given Command's argument separator\n\t * @static\n\t * @method parseArgs\n\t * @param {string} input Input string to parse args from\n\t * @param {Command} [command] Command object, used to determine the args separator.\n\t * \t\t\t\t\t\t\t  If none is given, `' '` will be used as the separator\n\t * @returns {string[]}\n\t */\n\tpublic static parseArgs(input: string, command?: Command): string[]\n\t{\n\t\treturn input\n\t\t\t.split((command && command.argOpts && command.argOpts.separator) || ' ')\n\t\t\t.map(a => a.trim())\n\t\t\t.filter(a => a !== '');\n\t}\n\n\t/**\n\t * Pads the right side of a string with spaces to the given length\n\t * @static\n\t * @method padRight\n\t * @param {string} text Text to pad\n\t * @param {number} length Length to pad to\n\t * @returns {string}\n\t */\n\tpublic static padRight(text: string, length: number): string\n\t{\n\t\tlet pad: number = Math.max(0, Math.min(length, length - text.length));\n\t\treturn `${text}${' '.repeat(pad)}`;\n\t}\n\n\t/**\n\t * Returns the given string lowercased with any non\n\t * alphanumeric chars removed\n\t * @static\n\t * @method normalize\n\t * @param {string} text Text to normalize\n\t * @returns {string}\n\t */\n\tpublic static normalize(text: string): string\n\t{\n\t\treturn text.toLowerCase().replace(/[^a-z0-9]+/g, '');\n\t}\n\n\t/**\n\t * Returns the given string with special characters escaped\n\t * @static\n\t * @method escape\n\t * @param {string} input String to escape\n\t * @returns {string}\n\t */\n\tpublic static escape(input: string): string\n\t{\n\t\treturn input.replace(/[[\\](){}|\\\\^$+\\-*?.]/g, '\\\\$&');\n\t}\n\n\t/**\n\t * Assigns the given value along the given nested path within\n\t * the provided initial object\n\t * @static\n\t * @method assignNestedValue\n\t * @param {any} obj Object to assign to\n\t * @param {string[]} path Nested path to follow within the object\n\t * @param {any} value Value to assign within the object\n\t * @returns {void}\n\t */\n\tpublic static assignNestedValue(obj: any, path: string[], value: any): void\n\t{\n\t\tif (typeof obj !== 'object' || obj instanceof Array)\n\t\t\tthrow new Error(`Initial input of type '${typeof obj}' is not valid for nested assignment`);\n\n\t\tif (path.length === 0)\n\t\t\tthrow new Error('Missing nested assignment path');\n\n\t\tlet first: string = path.shift()!;\n\t\tif (typeof obj[first] === 'undefined') obj[first] = {};\n\t\tif (path.length > 1 && (typeof obj[first] !== 'object' || obj[first] instanceof Array))\n\t\t\tthrow new Error(`Target '${first}' is not valid for nested assignment.`);\n\n\t\tif (path.length === 0) obj[first] = value;\n\t\telse Util.assignNestedValue(obj[first], path, value);\n\t}\n\n\t/**\n\t * Remove a value from within an object along a nested path\n\t * @static\n\t * @method removeNestedValue\n\t * @param {any} obj Object to remove from\n\t * @param {string[]} path Nested path to follow within the object\n\t * @returns {void}\n\t */\n\tpublic static removeNestedValue(obj: any, path: string[]): void\n\t{\n\t\tif (typeof obj !== 'object' || obj instanceof Array) return;\n\t\tif (path.length === 0)\n\t\t\tthrow new Error('Missing nested assignment path');\n\n\t\tlet first: string = path.shift()!;\n\t\tif (typeof obj[first] === 'undefined') return;\n\t\tif (path.length > 1 && (typeof obj[first] !== 'object' || obj[first] instanceof Array))\n\t\t\treturn;\n\n\t\tif (path.length === 0) delete obj[first];\n\t\telse Util.removeNestedValue(obj[first], path);\n\t}\n\n\t/**\n\t * Fetches a nested value from within an object via the\n\t * provided path\n\t * @static\n\t * @method getNestedValue\n\t * @param {any} obj Object to search\n\t * @param {string[]} path Nested path to follow within the object\n\t * @returns {any}\n\t */\n\tpublic static getNestedValue(obj: any, path: string[]): any\n\t{\n\t\tif (typeof obj === 'undefined') return;\n\t\tif (path.length === 0) return obj;\n\n\t\tlet first: string = path.shift()!;\n\t\tif (typeof obj[first] === 'undefined') return;\n\t\tif (path.length > 1 && (typeof obj[first] !== 'object' || obj[first] instanceof Array))\n\t\t\treturn;\n\n\t\treturn Util.getNestedValue(obj[first], path);\n\t}\n\n\t/**\n\t * Converts a TypeScript-style argument list into a valid args data object\n\t * for [resolve]{@link module:Middleware.resolve} and [expect]{@link module:Middleware.expect}.\n\t * This can help if the object syntax for resolving/expecting Command\n\t * arguments is too awkward or cluttered, or if a simpler syntax is\n\t * overall preferred.\n\t *\n\t * Args marked with `?` (for example: `arg?: String`) are declared as\n\t * optional and will be converted to `'[arg]': 'String'` at runtime.\n\t * Normal args will convert to `'<arg>': 'String'`\n\t *\n\t * Example:\n\t * ```\n\t * `user: User, height: ['short', 'tall'], ...desc?: String`\n\t * // becomes:\n\t * { '<user>': 'User', '<height>': ['short', 'tall'], '[...desc]': 'String' }\n\t * ```\n\t * @static\n\t * @method parseArgTypes\n\t * @param {string} input Argument list string\n\t * @returns {object}\n\t */\n\tpublic static parseArgTypes(input: string): { [arg: string]: string | string[] }\n\t{\n\t\tlet argStringRegex: RegExp = /(?:\\.\\.\\.)?\\w+\\?? *: *(?:\\[.*?\\](?= *, *)|(?:\\[.*?\\] *$)|\\w+)/g;\n\t\tif (!argStringRegex.test(input))\n\t\t\tthrow new Error(`Input string is incorrectly formatted: ${input}`);\n\n\t\tlet output: { [arg: string]: string | string[] } = {};\n\t\tlet args: string[] = input.match(argStringRegex)!;\n\t\tfor (let arg of args)\n\t\t{\n\t\t\tlet split: string[] = arg.split(':').map(a => a.trim());\n\t\t\tlet name: string = split.shift()!;\n\t\t\targ = split.join(':');\n\t\t\tif (/(?:\\.\\.\\.)?.+\\?/.test(name)) name = `[${name.replace('?', '')}]`;\n\t\t\telse name = `<${name}>`;\n\n\t\t\tif (/\\[ *(?:(?: *, *)?(['\"])(\\S+)\\1)+ *\\]|\\[ *\\]/.test(arg))\n\t\t\t{\n\t\t\t\tconst data: string = arg.match(/\\[(.*)\\]/)![1];\n\t\t\t\tif (!data) throw new Error('String literal array cannot be empty');\n\t\t\t\tconst values: string[] = data\n\t\t\t\t\t.split(',')\n\t\t\t\t\t.map(a => a.trim().slice(1, -1));\n\t\t\t\toutput[name] = values;\n\t\t\t}\n\t\t\telse output[name] = arg;\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Parse a ratelimit Tuple from the given shorthand string\n\t * @param {string} limitString Ratelimit string matching the regex `\\d+\\/\\d+[s|m|h|d]`<br>\n\t * \t\t\t\t\t\t \t   **Example:** `1/10m` to limit a command to one use per 10 minutes\n\t */\n\tpublic static parseRateLimit(limitString: string): [number, number]\n\t{\n\t\tconst limitRegex: RegExp = /^(\\d+)\\/(\\d+)(s|m|h|d)?$/;\n\t\tif (!limitRegex.test(limitString))\n\t\t\tthrow new Error(`Failed to parse a ratelimit from '${limitString}'`);\n\n\t\tlet [limit, duration, post]: [string | number, string | number, string] =\n\t\t\tlimitRegex.exec(limitString)!.slice(1, 4) as [string, string, string];\n\n\t\tif (post) duration = Time.parseShorthand(duration + post)!;\n\t\telse duration = parseInt(duration as string);\n\t\tlimit = parseInt(limit as string);\n\n\t\treturn [limit, duration];\n\t}\n\n\t/**\n\t * Implementation of `performance-now`\n\t * @static\n\t * @method now\n\t * @returns {number}\n\t */\n\tpublic static now(): number\n\t{\n\t\ttype NSFunction = (hr?: [number, number]) => number;\n\t\tconst ns: NSFunction = (hr = process.hrtime()) => hr[0] * 1e9 + hr[1];\n\t\treturn (ns() - (ns() - (process.uptime() * 1e9))) / 1e6;\n\t}\n\n\t/**\n\t * Flatten an array that may contain nested arrays\n\t * @static\n\t * @method flattenArray\n\t * @param {any[]} array\n\t * @returns {any[]}\n\t */\n\tpublic static flattenArray<T>(array: (T | T[])[]): T[]\n\t{\n\t\tconst result: T[] = [];\n\t\tfor (const item of array)\n\t\t\titem instanceof Array\n\t\t\t\t? result.push(...Util.flattenArray(item))\n\t\t\t\t: result.push(item);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Emit a deprecation warning message for the given target\n\t * @static\n\t * @method emitDeprecationWarning\n\t * @param {any} target Deprecation target\n\t * @param {string} message Deprecation message\n\t * @returns {void}\n\t */\n\tpublic static emitDeprecationWarning(target: any, message: string): void\n\t{\n\t\tif (typeof target._warnCache === 'undefined')\n\t\t\tObject.defineProperty(target, '_warnCache', { value: {} });\n\n\t\tconst warnCache: { [key: string]: boolean } = target._warnCache;\n\t\tif (warnCache[message]) return;\n\t\twarnCache[message] = true;\n\n\t\tprocess.emitWarning(message, 'DeprecationWarning');\n\t}\n\n\t/**\n\t * Attempts to lazy-load any of the given packages in order,\n\t * returning the entire namespace of the first package to be\n\t * loaded. Errors if no given package was found\n\t * @returns {any} The first package namespace to be found\n\t */\n\tpublic static lazyLoad<T>(...packages: string[]): T\n\t{\n\t\tlet pkg!: T;\n\n\t\tfor (const p of packages)\n\t\t{\n\t\t\ttry { pkg = require(p); } catch {}\n\t\t\tif (pkg) break;\n\t\t}\n\n\t\tif (!pkg) throw new Error(`Failed to lazy-load any of these packages: ${packages.join(', ')}`);\n\n\t\treturn pkg;\n\t}\n}\n"],"sourceRoot":"../../src"}