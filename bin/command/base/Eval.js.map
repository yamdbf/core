{"version":3,"sources":["command/base/Eval.ts"],"names":[],"mappings":"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","file":"Eval.js","sourcesContent":["import { Client } from '../../client/Client';\nimport { Message } from '../../types/Message';\nimport { Command } from '../Command';\nimport { using } from '../CommandDecorators';\nimport { Middleware } from '../middleware/Middleware';\nimport { ResourceProxy } from '../../types/ResourceProxy';\nimport { Util } from '../../util/Util';\nimport { inspect } from 'util';\nimport { FileOptions } from 'discord.js';\n\n// @ts-ignore - Exposed for eval command invocations\nconst Discord = require('discord.js');\n// @ts-ignore - Exposed for eval command invocations\nconst Yamdbf = require('../../index');\n\nexport default class extends Command\n{\n\tpublic constructor()\n\t{\n\t\tsuper({\n\t\t\tname: 'eval',\n\t\t\tdesc: 'Evaluate provided Javascript code',\n\t\t\tusage: '<prefix>eval <...code>',\n\t\t\townerOnly: true\n\t\t});\n\t}\n\n\t@using(Middleware.localize)\n\tpublic async action(message: Message, [res]: [ResourceProxy]): Promise<any>\n\t{\n\t\t// @ts-ignore - Exposed for eval command invocations\n\t\tconst client: Client = this.client;\n\t\tconst [, , prefix, name] = await Util.wasCommandCalled(message);\n\t\tconst call: RegExp = new RegExp(`^${Util.escape(prefix)} *${name}`);\n\t\tconst code: string = message.content.replace(call, '').trim();\n\n\t\tif (!code) return this.respond(message, res.CMD_EVAL_ERR_NOCODE());\n\n\t\tlet result!: string | object;\n\t\tlet error!: string;\n\t\tlet output: string;\n\n\t\ttry { result = await eval(code); }\n\t\tcatch (err) { error = err; }\n\n\t\tif (error) return this.respond(message, res.CMD_EVAL_ERROR({ code, error: this._clean(error) }));\n\t\tif (typeof result !== 'string') result = inspect(result, { depth: 0 });\n\n\t\tresult = this._clean(result);\n\t\toutput = res.CMD_EVAL_RESULT({ code, result });\n\n\t\tif (output.length > 2000)\n\t\t{\n\t\t\tconst outputFile: Buffer = Buffer.from(result);\n\t\t\tconst outputFileSize: number = outputFile.byteLength / 1024 / 1024;\n\n\t\t\tif (outputFileSize > 10)\n\t\t\t{\n\t\t\t\tconst size: string = outputFileSize.toFixed(2) + ' MB';\n\t\t\t\terror = res.CMD_EVAL_ERR_OUTPUT_LENGTH_FAIL_FILESIZE({ size });\n\t\t\t\toutput = res.CMD_EVAL_ERROR({ code, error });\n\t\t\t\treturn this.respond( message, output);\n\t\t\t}\n\n\t\t\tresult = res.CMD_EVAL_ERR_OUTPUT_LENGTH();\n\t\t\toutput = res.CMD_EVAL_RESULT({ code, result });\n\t\t\tconst files: FileOptions[] = [{ attachment: outputFile, name: 'output.txt' }];\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\treturn await this.respond(message, output, { files });\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\terror = res.CMD_EVAL_ERR_OUTPUT_LENGTH_FAIL_UNKNOWN();\n\t\t\t\toutput = res.CMD_EVAL_ERROR({ code, error });\n\t\t\t\treturn this.respond(message, output);\n\t\t\t}\n\t\t}\n\n\t\treturn this.respond(message, output);\n\t}\n\n\tprivate _clean(text: string): string\n\t{\n\t\treturn typeof text === 'string' ? text\n\t\t\t.replace(/`/g, `\\`${String.fromCharCode(8203)}`)\n\t\t\t.replace(/@/g, `@${String.fromCharCode(8203)}`)\n\t\t\t.replace(/[\\w\\d]{24}\\.[\\w\\d]{6}\\.[\\w\\d-_]{27}/g, '[REDACTED]')\n\t\t\t.replace(/email: '[^']+'/g, `email: '[REDACTED]'`)\n\t\t\t: text;\n\t}\n}\n"],"sourceRoot":"../../../src"}