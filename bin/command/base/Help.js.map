{"version":3,"sources":["command/base/Help.ts"],"names":[],"mappings":"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","file":"Help.js","sourcesContent":["import { Collection, MessageEmbed } from 'discord.js';\nimport { LocalizedCommandInfo } from '../../types/LocalizedCommandInfo';\nimport { ResourceProxy } from '../../types/ResourceProxy';\nimport { TemplateData } from '../../types/TemplateData';\nimport { Message } from '../../types/Message';\nimport { using } from '../CommandDecorators';\nimport { Middleware } from '../middleware/Middleware';\nimport { Lang } from '../../localization/Lang';\nimport { Util } from '../../util/Util';\nimport { Command } from '../Command';\n\nexport default class extends Command\n{\n\tpublic constructor()\n\t{\n\t\tsuper({\n\t\t\tname: 'help',\n\t\t\tdesc: 'Provides information on bot commands',\n\t\t\tusage: `<prefix>help [command]`,\n\t\t\tinfo: 'Will DM command help information to the user to keep clutter down in guild channels'\n\t\t});\n\t}\n\n\t@using(Middleware.localize)\n\tpublic async action(message: Message, [res, commandName]: [ResourceProxy, string]): Promise<void>\n\t{\n\t\tconst dm: boolean = message.channel.type !== 'text';\n\t\tconst mentionName: string = `@${this.client.user!.tag} `;\n\t\tconst lang: string = dm ? this.client.defaultLang\n\t\t\t:  await message.guild.storage!.settings.get('lang');\n\n\t\tconst cInfo: (cmd: Command) => LocalizedCommandInfo =\n\t\t\t(cmd: Command) => Lang.getCommandInfo(cmd, lang);\n\n\t\tlet command!: Command;\n\t\tlet output: string = '';\n\t\tlet embed: MessageEmbed = new MessageEmbed();\n\n\t\tif (!commandName)\n\t\t{\n\t\t\tconst usableCommands: Collection<string, Command> = this.client.commands\n\t\t\t\t.filter(c => !(!this.client.isOwner(message.author) && c.ownerOnly))\n\t\t\t\t.filter(c => !c.hidden && !c.disabled);\n\n\t\t\tconst widest: number = usableCommands\n\t\t\t\t.map(c => c.name.length)\n\t\t\t\t.reduce((a, b) => Math.max(a, b));\n\n\t\t\tlet commandList: string[] = usableCommands.map(c =>\n\t\t\t\t`${Util.padRight(c.name, widest + 1)}${c.guildOnly ? '*' : ' '}: ${cInfo(c).desc}`)\n\t\t\t\t\t.sort();\n\n\t\t\tconst shortcuts: { [name: string]: string } = !dm\n\t\t\t\t? await message.guild.storage!.settings.get('shortcuts') || {}\n\t\t\t\t: {};\n\n\t\t\tconst data: TemplateData = {\n\t\t\t\tisGuild: !dm,\n\t\t\t\tcommandList,\n\t\t\t\tshortcuts: Object.keys(shortcuts),\n\t\t\t\tusage: cInfo(this).usage,\n\t\t\t\tmentionUsage: cInfo(this).usage\n\t\t\t\t\t.replace('<prefix>', mentionName)\n\t\t\t};\n\n\t\t\toutput = res.CMD_HELP_COMMAND_LIST(data);\n\t\t\tif (output.length >= 1024)\n\t\t\t{\n\t\t\t\tlet mappedCommands: string[] = usableCommands\n\t\t\t\t\t.sort((a, b) => a.name < b.name ? -1 : 1)\n\t\t\t\t\t.map(c => (c.guildOnly ? '*' : ' ') + Util.padRight(c.name, widest + 2));\n\n\t\t\t\tdata.commandList = mappedCommands;\n\t\t\t\tdata.namesOnly = true;\n\n\t\t\t\toutput = res.CMD_HELP_COMMAND_LIST(data);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcommand = this.client.commands\n\t\t\t\t.filter(c => !c.disabled && !(!this.client.isOwner(message.author) && c.ownerOnly))\n\t\t\t\t.find(c => c.name === commandName || c.aliases.includes(commandName));\n\n\t\t\tif (!command) output = res.CMD_HELP_UNKNOWN_COMMAND();\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst info: LocalizedCommandInfo = cInfo(command);\n\t\t\t\toutput = res.CMD_HELP_CODEBLOCK({\n\t\t\t\t\tserverOnly: command.guildOnly ? res.CMD_HELP_SERVERONLY() : '',\n\t\t\t\t\townerOnly: command.ownerOnly ? res.CMD_HELP_OWNERONLY() : '',\n\t\t\t\t\tcommandName: command.name,\n\t\t\t\t\tdesc: info.desc,\n\t\t\t\t\taliasText: command.aliases.length > 0\n\t\t\t\t\t\t? res.CMD_HELP_ALIASES({ aliases: command.aliases })\n\t\t\t\t\t\t: '',\n\t\t\t\t\tusage: info.usage,\n\t\t\t\t\tinfo: info.info ? `\\n${info.info}` : ''\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\toutput = dm ? output.replace(/<prefix>/g, '')\n\t\t\t: output.replace(/<prefix>/g, await this.client.getPrefix(message.guild) || '');\n\n\t\tembed.setColor(11854048).setDescription(output);\n\n\t\ttry\n\t\t{\n\t\t\tif (!this.client.dmHelp) await this.respond(message, '', { embed });\n\t\t\telse await message.author.send({ embed });\n\n\t\t\tif (!dm && this.client.dmHelp)\n\t\t\t{\n\t\t\t\tif (command) message.reply(res.CMD_HELP_REPLY_CMD());\n\t\t\t\telse message.reply(res.CMD_HELP_REPLY_ALL());\n\t\t\t}\n\t\t}\n\t\tcatch { if (!dm) message.reply(res.CMD_HELP_REPLY_FAIL()); }\n\t}\n}\n"],"sourceRoot":"../../../src"}