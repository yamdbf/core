{"version":3,"sources":["command/base/Shortcuts.ts"],"names":[],"mappings":"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","file":"Shortcuts.js","sourcesContent":["import { Message } from '../../types/Message';\nimport { Command } from '../Command';\nimport { using } from '../CommandDecorators';\nimport { Middleware } from '../middleware/Middleware';\nimport { Util } from 'discord.js';\nimport { ResourceProxy } from '../../types/ResourceProxy';\nconst { resolve, expect, localize } = Middleware;\n\nexport default class extends Command\n{\n\tpublic constructor()\n\t{\n\t\tsuper({\n\t\t\tname: 'shortcuts',\n\t\t\tdesc: 'Configure or list command shortcuts',\n\t\t\tusage: `<prefix>shortcuts ['get'|'set'|'remove'] [name] [...content]`,\n\t\t\tinfo: `Shortcuts allow creating and calling preconfigured command+argument sets, or simple aliases\n\nExample:\n\t<prefix>shortcuts set h help\n\nWhich would set the shortcut \"h\" to call the command \"help\"\n\n\nShortcuts also allow substitution tokens for argument interpolation.\n\nExample:\n\t<prefix>shortcuts set add eval %s + %s\n\nWhich would set the shortcut \"add\", to add two numbers --\n\"<prefix>add 2 3\", which becomes \"<prefix>eval 2 + 3\"\n\nOf course the eval command is owner-only, but this should give you an idea of how shortcuts work`,\n\t\t\tcallerPermissions: ['ADMINISTRATOR']\n\t\t});\n\t}\n\n\t@using(resolve(`action: ['get', 'set', 'remove'], name: String, ...content: String`))\n\t@using(function(this: Command, message, args: string[])\n\t{\n\t\tif (args[0])\n\t\t{\n\t\t\tif (args[0] === 'set')\n\t\t\t\treturn expect(`action: ['get', 'set', 'remove'], name: String, ...content: String`)\n\t\t\t\t\t.call(this, message, args);\n\n\t\t\telse\n\t\t\t\treturn expect(`action: ['get', 'set', 'remove'], name: String`)\n\t\t\t\t\t.call(this, message, args);\n\t\t}\n\t\telse return [message, args];\n\t})\n\t@using(localize)\n\tpublic async action(message: Message, [res, action, name, content]: [ResourceProxy, string, string, string]): Promise<any>\n\t{\n\t\tif (!action) return this.listShortcuts(message, res);\n\t\telse if (action === 'set') return this.setShortcut(message, res, name, content);\n\t\telse if (action === 'get') return this.getShortcut(message, res, name);\n\t\telse if (action === 'remove') return this.removeShortcut(message, res, name);\n\t}\n\n\t/**\n\t * List command shortcuts\n\t */\n\tprivate async listShortcuts(message: Message, res: ResourceProxy): Promise<void>\n\t{\n\t\tconst shortcuts: { [name: string]: string } = await message.guild.storage!.settings.get('shortcuts') ?? {};\n\t\tconst names: string[] = Object.keys(shortcuts);\n\n\t\tlet output: string;\n\n\t\tif (names.length === 0) output = res.CMD_SHORTCUTS_ERR_NO_SHORTCUTS();\n\t\telse output = res.CMD_SHORTCUTS_LIST({ names: names.join(', ') });\n\n\t\tthis.respond(message, output);\n\t}\n\n\t/**\n\t * Set command shortcut content\n\t */\n\tprivate async setShortcut(message: Message, res: ResourceProxy, name: string, content: string): Promise<any>\n\t{\n\t\tconst shortcuts: { [name: string]: string } = await message.guild.storage!.settings.get('shortcuts') ?? {};\n\t\tif (Object.keys(shortcuts).length >= 50)\n\t\t\treturn this.respond(message, res.CMD_SHORTCUTS_ERR_MAX_SHORTCUTS());\n\n\t\tif (content.length > 500)\n\t\t\treturn this.respond(message, res.CMD_SHORTCUTS_ERR_SET_LENGTH());\n\n\t\tawait message.guild.storage!.settings.set(`shortcuts.${name}`, content);\n\n\t\tcontent = Util.escapeMarkdown(content, { codeBlock: true, codeBlockContent: true });\n\t\treturn this.respond(message, res.CMD_SHORTCUTS_SET_SUCCESS({ name, content }));\n\t}\n\n\t/**\n\t * Get command shortcut content\n\t */\n\tprivate async getShortcut(message: Message, res: ResourceProxy, name: string): Promise<any>\n\t{\n\t\tconst shortcuts: { [name: string]: string } = await message.guild.storage!.settings.get('shortcuts') ?? {};\n\t\tif (!shortcuts[name])\n\t\t\treturn this.respond(message, res.CMD_SHORTCUTS_ERR_MISSING({ name }));\n\n\t\tconst content: string = Util.escapeMarkdown(shortcuts[name], { codeBlock: true, codeBlockContent: true });\n\t\treturn this.respond(message, res.CMD_SHORTCUTS_GET_CONTENT({ name, content }));\n\t}\n\n\t/**\n\t * Remove a command shortcut\n\t */\n\tprivate async removeShortcut(message: Message, res: ResourceProxy, name: string): Promise<any>\n\t{\n\t\tconst shortcuts: { [name: string]: string } = await message.guild.storage!.settings.get('shortcuts') ?? {};\n\t\tif (!shortcuts[name])\n\t\t\treturn this.respond(message, res.CMD_SHORTCUTS_ERR_MISSING({ name }));\n\n\t\tawait message.guild.storage!.settings.remove(`shortcuts.${name}`);\n\t\treturn this.respond(message, res.CMD_SHORTCUTS_REMOVE_SUCCESS({ name }));\n\t}\n}\n"],"sourceRoot":"../../../src"}