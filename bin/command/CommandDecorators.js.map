{"version":3,"sources":["command/CommandDecorators.ts"],"names":[],"mappings":"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","file":"CommandDecorators.js","sourcesContent":["import { Lang } from '../localization/Lang';\nimport { ArgOpts } from '../types/ArgOpts';\nimport { Message } from '../types/Message';\nimport { MiddlewareFunction } from '../types/MiddlewareFunction';\nimport { ResourceProxy } from '../types/ResourceProxy';\nimport { Command } from './Command';\nimport { Util } from '../util/Util';\nimport { PermissionResolvable, MessageOptions } from 'discord.js';\nimport { CompactModeHelper } from './CompactModeHelper';\n\n/**\n * Grouping of static decorator methods for the {@link Command}\n * class and {@link Command#action} method\n *\n * >**Note:** This is a TypeScript feature. JavaScript users are limited to\n * using CommandInfo to define their commands and {@link Command#use} for\n * assigning middleware functions to commands\n * @module CommandDecorators\n */\n\n/**\n * Apply a middleware function to the action method of a Command.\n * Identical to {@link Command#use} but used as a Command action\n * method decorator\n * @static\n * @method using\n * @param {MiddlewareFunction} func Middleware function to use\n * \t\t\t\t\t\t\t\t\tfor the decorated Command action\n * @returns {MethodDecorator}\n */\nexport function using(func: MiddlewareFunction): MethodDecorator\n{\n\treturn function(target: object, key: PropertyKey, descriptor: PropertyDescriptor): PropertyDescriptor\n\t{\n\t\tif (!target) throw new Error('@using must be used as a method decorator for a Command action method.');\n\t\tif (key !== 'action') throw new Error(\n\t\t\t`\"${target.constructor.name}#${key as string}\" is not a valid method target for @using.`);\n\n\t\tif (!descriptor) descriptor = Object.getOwnPropertyDescriptor(target, key)!;\n\t\tconst original: any = descriptor.value;\n\t\tdescriptor.value = async function(this: Command, message: Message, args: any[]): Promise<any>\n\t\t{\n\t\t\t// Send the middleware result to the channel, utilizing compact mode if enabled\n\t\t\tconst sendMiddlewareResult: (result: string, options?: MessageOptions) => Promise<any> =\n\t\t\t\tasync (result, options) => {\n\t\t\t\t\tif (await message.guild?.storage?.settings.get('compact') || this.client.compact)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (message.reactions.size > 0) await message.reactions.removeAll();\n\t\t\t\t\t\treturn CompactModeHelper.registerButton(\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tthis.client.buttons['fail'],\n\t\t\t\t\t\t\t() => message.channel.send(result, options));\n\t\t\t\t\t}\n\t\t\t\t\telse return message.channel.send(result);\n\t\t\t\t};\n\n\t\t\t// Run the given middleware function\n\t\t\tlet middlewarePassed: boolean = true;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tlet result: Promise<[Message, any[]]> | [Message, any[]] =\n\t\t\t\t\tfunc.call(this, message, args);\n\t\t\t\tif (result instanceof Promise) result = await result;\n\t\t\t\tif (!(result instanceof Array))\n\t\t\t\t{\n\t\t\t\t\tif (typeof result === 'string') sendMiddlewareResult(result);\n\t\t\t\t\tmiddlewarePassed = false;\n\t\t\t\t}\n\t\t\t\tif (middlewarePassed) [message, args] = result;\n\t\t\t}\n\t\t\tcatch (err)\n\t\t\t{\n\t\t\t\tsendMiddlewareResult(err.toString(), { split: true });\n\t\t\t\tmiddlewarePassed = false;\n\t\t\t}\n\n\t\t\tif (middlewarePassed) return await original.apply(this, [message, args]);\n\t\t};\n\t\treturn descriptor;\n\t};\n}\n\n/**\n * Creates a {@link ResourceProxy} object using the localization\n * language for the command call and passes it as the first argument\n * for that command call.\n *\n * Identical to [localize]{@link module:Middleware.localize} but used\n * as a Command action method decorator.\n *\n * Like the `localize` middleware, you will want to use this after\n * any other usages of middleware via [@using()]{@link module:CommandDecorators.using}.\n * Middleware added via {@link Command#use} is evaluated before\n * middleware added via `@using()`.\n * @deprecated in favor of [localize]{@link module:Middleware.localize}. Will be removed in a future release\n * @static\n * @name localizable\n * @type {MethodDecorator}\n */\nexport function localizable(target: Command, key: string, descriptor: PropertyDescriptor): PropertyDescriptor\n{\n\tUtil.emitDeprecationWarning(localizable,\n\t\t'`CommandDecorators.localizable` is deprecated. Use `Middleware.localize` instead');\n\n\tif (!target) throw new Error('@localizable must be used as a method decorator for a Command action method.');\n\tif (key !== 'action') throw new Error(\n\t\t`\"${target.constructor.name}#${key}\" is not a valid method target for @localizable.`);\n\n\tif (!descriptor) descriptor = Object.getOwnPropertyDescriptor(target, key)!;\n\tconst original: any = descriptor.value;\n\n\tdescriptor.value = async function(this: Command, message: Message, args: any[]): Promise<any>\n\t{\n\t\tconst lang: string = await Lang.getLangFromMessage(message);\n\t\tconst res: ResourceProxy = Lang.createResourceProxy(lang);\n\t\treturn await original.apply(this, [message, [res, ...args]]);\n\t};\n\n\treturn descriptor;\n}\n\n/**\n * Set `name` metadata\n * @static\n * @method name\n * @param {string} value Value to set\n * @returns {ClassDecorator}\n */\nexport function name(value: string): ClassDecorator\n{\n\treturn _setMetaData('name', value);\n}\n\n/**\n * Set `aliases` metadata\n * @static\n * @method aliases\n * @param {...string} values Values to set\n * @returns {ClassDecorator}\n */\nexport function aliases(...values: string[]): ClassDecorator\n{\n\treturn _setMetaData('aliases', values);\n}\n\n/**\n * Set `desc` metadata\n * @static\n * @method desc\n * @param {string} value Value to set\n * @returns {ClassDecorator}\n */\nexport function desc(value: string): ClassDecorator\n{\n\treturn _setMetaData('desc', value);\n}\n\n/**\n * Set `usage` metadata\n * @static\n * @method usage\n * @param {string} value Value to set\n * @returns {ClassDecorator}\n */\nexport function usage(value: string): ClassDecorator\n{\n\treturn _setMetaData('usage', value);\n}\n\n/**\n * Set `info` metadata\n * @static\n * @method info\n * @param {string} value Value to set\n * @returns {ClassDecorator}\n */\nexport function info(value: string): ClassDecorator\n{\n\treturn _setMetaData('info', value);\n}\n\n/**\n * Set `group` metadata\n * @static\n * @method group\n * @param {string} value Value to set\n * @returns {ClassDecorator}\n */\nexport function group(value: string): ClassDecorator\n{\n\treturn _setMetaData('group', value);\n}\n\n/**\n * Set `argOpts` metadata\n * @static\n * @method argOpts\n * @param {ArgOpts} value Value to set\n * @returns {ClassDecorator}\n */\nexport function argOpts(value: ArgOpts): ClassDecorator\n{\n\treturn _setMetaData('usage', value);\n}\n\n/**\n * Set `callerPermissions` metadata\n * @static\n * @method callerPermissions\n * @param {...external:PermissionResolvable} values Values to set\n * @returns {ClassDecorator}\n */\nexport function callerPermissions(...values: PermissionResolvable[]): ClassDecorator\n{\n\treturn _setMetaData('callerPermissions', values);\n}\n\n/**\n * Set `clientPermissions` metadata\n * @static\n * @method clientPermissions\n * @param {...external:PermissionResolvable} values Values to set\n * @returns {ClassDecorator}\n */\nexport function clientPermissions(...values: PermissionResolvable[]): ClassDecorator\n{\n\treturn _setMetaData('clientPermissions', values);\n}\n\n/**\n * Set `roles` metadata\n * @static\n * @method roles\n * @param {...string} values Values to set\n * @returns {ClassDecorator}\n */\nexport function roles(...values: string[]): ClassDecorator\n{\n\treturn _setMetaData('roles', values);\n}\n\n/**\n * Set `ratelimit` metadata\n * @static\n * @method ratelimit\n * @param {string} value Value to set\n * @returns {ClassDecorator}\n */\nexport function ratelimit(value: string): ClassDecorator\n{\n\tUtil.parseRateLimit(value);\n\treturn _setMetaData('_ratelimit', value);\n}\n\n/**\n * Set `owneronly` flag metadata\n * @static\n * @name ownerOnly\n * @type {ClassDecorator}\n */\nexport function ownerOnly<T extends Function>(target: T): T\n{\n\treturn _setFlagMetaData(target, 'ownerOnly');\n}\n\n/**\n * Set `guildOnly` flag metadata\n * @static\n * @name guildOnly\n * @type {ClassDecorator}\n */\nexport function guildOnly<T extends Function>(target: T): T\n{\n\treturn _setFlagMetaData(target, 'guildOnly');\n}\n\n/**\n * Set `hidden` flag metadata\n * @static\n * @name hidden\n * @type {ClassDecorator}\n */\nexport function hidden<T extends Function>(target: T): T\n{\n\treturn _setFlagMetaData(target, 'hidden');\n}\n\n/**\n * Set a boolean flag metadata on a command class\n * @private\n */\nfunction _setFlagMetaData<T extends Function>(target: T, flag: string): T\n{\n\tObject.defineProperty(target.prototype, flag, {\n\t\tvalue: true,\n\t\tenumerable: true,\n\t});\n\treturn target;\n}\n\n/**\n * Set an arbitrary value to an arbitrary key on a command class\n * @private\n */\nfunction _setMetaData(key: string, value: any): ClassDecorator\n{\n\treturn function<T extends Function>(target: T): T\n\t{\n\t\tObject.defineProperty(target.prototype, key, {\n\t\t\tvalue: value,\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\twritable: true\n\t\t});\n\t\treturn target;\n\t};\n}\n"],"sourceRoot":"../../src"}