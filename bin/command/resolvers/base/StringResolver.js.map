{"version":3,"sources":["command/resolvers/base/StringResolver.ts"],"names":[],"mappings":";;AAAA,0CAAuC;AAKvC,MAAa,cAAe,SAAQ,mBAAQ;IAE3C,YAAmB,MAAc;QAEhC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACnC,CAAC;IAEM,QAAQ,CAAC,KAAU;QAEzB,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;IAClC,CAAC;IAEM,UAAU,CAAC,KAAwB;QAEzC,OAAO,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACrE,CAAC;IAEM,OAAO,CAAC,QAAiB,EAAE,QAAiB,EAAE,KAAa,EAAE,KAAwB;QAE3F,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;CACD;AArBD,wCAqBC","file":"StringResolver.js","sourcesContent":["import { Resolver } from '../Resolver';\nimport { Client } from '../../../client/Client';\nimport { Command } from '../../Command';\nimport { Message } from '../../../types/Message';\n\nexport class StringResolver extends Resolver\n{\n\tpublic constructor(client: Client)\n\t{\n\t\tsuper(client, 'String', 'string');\n\t}\n\n\tpublic validate(value: any): boolean\n\t{\n\t\treturn typeof value === 'string';\n\t}\n\n\tpublic resolveRaw(value: string | string[]): string\n\t{\n\t\treturn value instanceof Array ? value.join('\\n') : value.toString();\n\t}\n\n\tpublic resolve(_message: Message, _command: Command, _name: string, value: string | string[]): string\n\t{\n\t\treturn this.resolveRaw(value);\n\t}\n}\n"],"sourceRoot":"../../../../src"}